在GKE中配置network policy时,指定的端口对应于Pod的实际端口,而不是external IP的端口。

举个例子:

- 您有一个deployment,其中包含3个pod,每个pod都在端口8000上暴露一个服务。
- 您为deployment配置了一个network policy,允许源访问端口8000。
- Deployment的external IP是10.0.0.1。

在这种情况下,network policy允许访问deployment中每个pod的端口8000。它不特定允许访问external IP 10.0.0.1的端口8000。实际上,external IP的端口可以是动态分配的,与pod端口8000不一定匹配。

所以当定义GKE network policy的规则时,您应该专注于 pod 实际监听的端口,而不是 external IP 的端口。

比如,如果您想允许外部流量访问上面deployment的服务,network policy应该是:

apiVersion: http://networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: example
spec:
  podSelector:
    matchLabels:
      app: myapp
  ingress:
  - ports:
    - port: 8000


这会打开每个pod的端口8000,允许外部流量访问deployment的服务,无论外部IP和端口是什么。

希望这可以澄清GKE network policy中端口的工作原理。请让我知道如果您有任何其他问题!



在GKE中配置network policy时，它所允许的端口是Pod的真实端口，而不是external-ip的端口。

Network Policy允许您控制集群中Pod之间的流量。当您配置Network Policy时，您可以定义允许或拒绝哪些流量进出Pod。这些规则基于Pod的标签选择器进行匹配，并且可以限制特定端口的访问。

在GKE中，每个Pod都分配了一个唯一的IP地址，这个IP地址只能在GKE集群内部使用。当您定义Network Policy时，您可以根据Pod的标签选择器选择一组Pod，并定义允许或拒绝它们之间的通信。如果您想允许外部流量访问Pod，您需要使用服务（Service）将Pod暴露给外部，并且在服务定义中定义您想要暴露的端口。

当您定义Network Policy时，您可以指定允许或拒绝特定端口的访问。这些端口是Pod的真实端口，而不是external-ip的端口。因此，如果您希望允许或拒绝访问Pod的某个端口，您需要使用该端口的真实端口进行配置。
GKE namespace 之间配置network policy 的时候、基于pod 访问的时候，network policy 允许的端口是external-ip 的端口还是pod 的端口？


当在 GKE 中为命名空间之间的 Pod 配置网络策略时，可以基于 Pod IP 地址和 Pod 名称设置策略。在策略规则中指定的端口是 Pod 的端口，而不是 External IP 的端口。

这是因为 NetworkPolicy 在 Kubernetes 中实现为 PodSelector 和 NamespaceSelector 之间的筛选器，它会阻止对 Pod IP 地址和名称匹配的 Pod 的流量。因此，它仅与 Pod 相关，而不考虑该 Pod 的外部 IP 或其他网络标识符。

需要注意的是，如果您希望在 Pod 和外部服务之间配置网络策略，则需要使用 Kubernetes 服务来公开 Pod，然后在网络策略中使用服务的选择器来指定外部 IP 地址和端口。
