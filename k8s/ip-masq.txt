#!/bin/bash
set -euo pipefail
# Define variables
namespace="kube-system"
configmap="ip-masq-agent"
configfile="ip-masq-agent.txt"

# Define ip-masq-agent.txt for configmap
cat <<EOF >$configfile
nonMasqueradeCIDRs:
  - 10.0.0.0/8
  - 128.0.0.0/2
  - 192.168.64.0/19
  - 100.64.0.0/14
masqLinkLocal: false
resyncInterval: 60s
EOF

# Check if ip-masq-agent DaemonSet exists in $namespace namespace
if ! kubectl get daemonsets/ip-masq-agent -n $namespace >/dev/null 2>&1; then
	echo "ip-masq-agent DaemonSet not found in $namespace namespace"
	exit 1
fi

# Check if configmap exists in $namespace namespace
if ! kubectl get configmaps/$configmap -n $namespace >/dev/null 2>&1; then
	echo "$configmap configmap not found in $namespace namespace"
	echo "Creating $configmap configmap"
	kubectl apply -f - <<EOF
apiVersion: v1
kind: ConfigMap
metadata:
  name: $configmap
  namespace: $namespace
data:
  config: $(cat $configfile)
EOF
	echo "Describing $configmap configmap"
	kubectl describe configmaps/$configmap -n $namespace
else
	echo "$configmap configmap already exists in $namespace namespace"
fi

kubectl describe configmaps/$configmap -n $namespace

set -euo pipefail
# Define ip-masq-agent.txt for configmap
cat <<EOF >ip-masq-agent.txt
nonMasqueradeCIDRs:
  - 10.0.0.0/8
  - 128.0.0.0/2
  - 192.168.64.0/19
  - 100.64.0.0/14
masqLinkLocal: false
resyncInterval: 60s
EOF

# Check if ip-masq-agent DaemonSet exists in kube-system namespace
if ! kubectl get daemonsets/ip-masq-agent -n kube-system >/dev/null 2>&1; then
	echo "ip-masq-agent DaemonSet not found in kube-system namespace"
	exit 1
fi

# Check if configmaps exists in kube-system namespace
if ! kubectl get configmaps/ip-masq-agent -n kube-system >/dev/null 2>&1; then
	echo "ip-masq-agent configmap not found in kube-system namespace"
	echo "The next will create configmap"
	kubectl create configmap ip-masq-agent -n kube-system --from-file=config=ip-masq-agent.txt
	echo "describe configmaps"
	kubectl describe configmaps/ip-masq-agent -n kube-system
else
	exit 1
fi

kubectl describe configmaps/ip-masq-agent -n kube-system


This code checks if the `ip-masq-agent` DaemonSet exists in the `kube-system` namespace of a Kubernetes cluster using the `kubectl get` command. If the DaemonSet is not found, it prints an error message and exits the script with an error code of `1`.

Here's how the code works:

1. The `kubectl get` command is used to retrieve information about the `ip-masq-agent` DaemonSet in the `kube-system` namespace. The `>/dev/null 2>&1` part redirects the output of the command to `/dev/null` to suppress any output, and redirects any error messages to the same place.

2. The `!` operator negates the exit code of the previous command. This means that if the `kubectl get` command fails (i.e., the DaemonSet is not found), the exit code will be `1`, which is considered a failure. If the command succeeds (i.e., the DaemonSet is found), the exit code will be `0`, which is considered a success.
“！”运算符否 是上一个命令的退出代码。这意味着，
如果“kubect get”命令失败（即未找到DaemonSet），则退出代码将为“1”，这被视为失败。如果命令成功（即找到DaemonSet），则退出代码将为“0”，这被视为成功。

3. The `if` statement checks the exit code of the previous command. If the exit code is not `0` (i.e., the DaemonSet is not found), the code inside the `if` block is executed.

4. The `echo` command prints an error message to the console indicating that the `ip-masq-agent` DaemonSet was not found in the `kube-system` namespace.

5. The `exit` command exits the script with an error code of `1`, indicating that the script failed.

Overall, this code is useful for checking if the `ip-masq-agent` DaemonSet exists in the `kube-system` namespace before performing any operations that depend on it. If the DaemonSet is not found, the script will exit with an error code, which can be used to trigger an alert or take other actions.



The ! symbol is a logical NOT operator, which means that the command following it will be executed if the preceding command fails

！符号是一个逻辑NOT运算符，这意味着如果前面的命令失败，将执行后面的命令
