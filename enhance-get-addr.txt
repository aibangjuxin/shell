#!/bin/bash
process=10
tmp_fifofile=/tmp/$$.fifo

mkfifo $tmp_fifofile
exec 9<> $tmp_fifofile
rm $tmp_fifofile
for i in $(seq $process )
do
    echo >&9
done

# define domain list
domain_ip=/tmp/a.txt
domain_loop=/tmp/domain_loop.txt
collect_ip=/tmp/b.txt
diff_ip=/tmp/c.txt
# Specify DNS server
dnsserver="119.29.29.29"
# function to get IP address
function get_ipaddr {
	local hostname=$1
	local query_type=A
	ip_address=""
	# use host command for DNS lookup operations
	host -t ${query_type} "${hostname}" ${dnsserver} &>/dev/null
	if [ "$?" -eq "0" ]; then
		# get ip address
		ip_address="$(host -t ${query_type} "${hostname}" | awk '/has.*address/{print $NF}' | sort -rn | awk BEGIN{RS=EOF}'{gsub(/\n/," ");print}')"
	else
		echo "############" # 确实这种取不到值的情况 ,所以其实对于我们来说,直接忽略这个问题? echo"" > /dev/null
	fi
	# display ip 
	echo $ip_address
}

function get_ipaddr_simple {
	local hostname=$1
	local query_type=A
	ip_address=""
    ip_address="$(host -t ${query_type} "${hostname}" | awk '/has.*address/{print $NF}' | sort -rn | awk BEGIN{RS=EOF}'{gsub(/\n/," ");print}')"
	echo $ip_address
}

for i in $(seq 800); do cat $domain_ip; done >$domain_loop
#for i in {1..5}; do cat /tmp/a.txt; done > $domain_loop

true >$collect_ip
start=$(date +%s)

IFS=' '
while read -r domain_array; do
	read -u 9
	{
		#echo "${domain_array}" "$(get_ipaddr "${domain_array}")" >>$collect_ip
		echo "${domain_array}" "$(get_ipaddr_simple "${domain_array}")" >>$collect_ip
		echo >&9
	} &
done <$domain_loop

wait
if [ $? -eq 0 ]; then
	echo "generate record successfully"
fi
exec 9>&-

end=$(date +%s)

echo "TIME:$(expr "$end" - "$start")"
echo "hello world "
